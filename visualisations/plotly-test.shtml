<!DOCTYPE html>
<html>

<head>

    <link href="../css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="../main.css">
    <link href="../css/navbar.css" rel="stylesheet">


    <!--- datatable scripts --->
    <script src="http://code.jquery.com/jquery-1.11.3.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.9/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.9/js/dataTables.bootstrap.min.js"></script>
    <script src="https://cdn.datatables.net/responsive/1.0.7/js/dataTables.responsive.min.js"></script>
    <!--- Datatable css --->
    <link href="https://cdn.datatables.net/1.10.9/css/dataTables.bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.datatables.net/responsive/1.0.7/css/responsive.bootstrap.min.css" rel="stylesheet">



    <!--- Initialise data table --->
    <script>
        $(document).ready(function () {
            $('#example').DataTable();
        });
    </script>

    <!--- Google Analytics --->
    <script>
        (function (i, s, o, g, r, a, m) {
            i['GoogleAnalyticsObject'] = r;
            i[r] = i[r] || function () {
                (i[r].q = i[r].q || []).push(arguments)
            }, i[r].l = 1 * new Date();
            a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', 'UA-62551361-3', 'auto');
        ga('send', 'pageview');
    </script>
    <!--- End Google Analytics --->
    <!-- Plotly.js -->
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
</head>

<body>
    <nav class="navbar navbar-default navbar-inverse" role="navigation">
        <div class="container">
            <!--#include virtual="../navbar.shtml" -->
        </div>
    </nav>
    <div class="container">
        <h1>Plotly Visualisations</h1>
        <p>Bunch of tests</p>
    </div>
    
    <div class="container">
    <h2>Internal Array Test</h2>
        <div id="internal-array"></div>
        <script type="text/javascript">
        var trace1 = {
 	      x: [1, 2, 3, 4], 
          y: [10, 15, 13, 17], 
          type: 'scatter'
        };
        var trace2 = {
          x: [1, 2, 3, 4], 
          y: [16, 5, 11, 9], 
          type: 'scatter'
        };
        var data = [trace1, trace2];
        Plotly.newPlot('internal-array', data);
        </script>
    </div>
    
    <div class="container">

        <h2>Duplicated plot</h2>

        <div id="myDiv" style="width: 480px; height: 400px;">
            <!-- Plotly chart will be drawn inside this DIV -->
        </div>
        <script type="text/javascript">
            Plotly.d3.csv('https://raw.githubusercontent.com/plotly/datasets/master/gapminderDataFiveYear.csv', function (err, rows) {
                var YEAR = 1997;
                var continents = ['Asia', 'Europe', 'Africa', 'Oceania', 'Americas'];
                var POP_TO_PX_SIZE = 2e5;

                function unpack(rows, key) {
                    return rows.map(function (row) {
                        return row[key];
                    });
                }

                var data = continents.map(function (continent) {
                    var rowsFiltered = rows.filter(function (row) {
                        return (row.continent === continent) && (+row.year === YEAR);
                    });
                    return {
                        mode: 'markers',
                        name: continent,
                        x: unpack(rowsFiltered, 'lifeExp'),
                        y: unpack(rowsFiltered, 'gdpPercap'),
                        text: unpack(rowsFiltered, 'country'),
                        marker: {
                            sizemode: 'area',
                            size: unpack(rowsFiltered, 'pop'),
                            sizeref: POP_TO_PX_SIZE
                        }
                    };
                });
                var layout = {
                    xaxis: {
                        title: 'Life Expectancy'
                    },
                    yaxis: {
                        title: 'GDP per Capita',
                        type: 'log'
                    },
                    margin: {
                        t: 20
                    },
                    hovermode: 'closest'
                };
                Plotly.plot('myDiv', data, layout, {
                    showLink: false
                });
            });
        </script>
    </div>



    <div class="container">

        <h2>Fulltime Salaries during 2014 in the UK</h2>

        <div id="salaries-div"></div>

        <script type="text/javascript">
            Plotly.d3.csv("https://gist.githubusercontent.com/martinjhnhadley/f45835cf58de7d1609e0/raw/cd997c26d5f89f470a5682d687be946a0dc66224/uk-fulltime-salaries-2014.csv", function (err, data) {

                var xCol = data.map(function (d) {
                    return +d["18 to 21"];
                });
                var yCol = data.map(function (d) {
                    return +d["Percentile"];
                });

                var trace = {
                    x: xCol,
                    y: yCol,
                    mode: 'lines+markers'
                };

                var data = [trace];

                var layout = {
                    title: 'Line and Scatter Plot',
                    height: 400,
                    width: 800
                };

                Plotly.plot('salaries-div', data, layout, {
                    showLink: false
                });
            });
        </script>

    </div>

    <div class="container">

        <h2>Choose your dataset Fulltime Salaries during 2014 in the UK</h2>

        <div class="control-row">
            Age Range to Select:
            <select class="agerange">
            </select>
        </div>
        <div id="interactive-salaries-div"></div>

        <script type="text/javascript">
            Plotly.d3.csv("https://gist.githubusercontent.com/martinjhnhadley/f45835cf58de7d1609e0/raw/cd997c26d5f89f470a5682d687be946a0dc66224/uk-fulltime-salaries-2014.csv", function (err, data){

                var listOfAgeRanges = ["18 to 21", "22 to 29"];

                var dictionary = {}

                listOfAgeRanges(function(x){
                    dictionary.push(
                        x : data.map(function(d) {
                        return +d["18 to 21"];
                    }))
                })

                

                console.log(dictionary)

                /*Set default age range*/
                setSalaryChart('18 to 21');

                function setSalaryChart(chosenAgeRange) {
                    /* Columns are extracted using data.map */
                    var xCol = data.map(function(d) {
                        return +d["18 to 21"];
                    });
                    var yCol = data.map(function(d) {
                        return +d["Percentile"];
                    });

                    var trace = {
                        x: xCol,
                        y: yCol,
                        mode: 'lines+markers'
                    };

                    var data = [trace];

                    var layout = {
                        title: 'Line and Scatter Plot',
                        height: 400,
                        width: 800
                    };

                    Plotly.plot('interactive-salaries-div', data, layout, {
                        showLink: false
                    });
                }

                var innerContainer = document.querySelector('[data-num="0"'),
                    plotEl = innerContainer.querySelector('.plot'),
                    ageRangeSelector = innerContainer.querySelector('.agerange');

                function assignOptions(textArray, selector) {
                    for (var i = 0; i < textArray.length; i++) {
                        var currentOption = document.createElement('option');
                        currentOption.text = textArray[i];
                        selector.appendChild(currentOption);
                    }
                }

                assignOptions(listofAgeRanges, ageRangeSelector);

                function updateAgeRange() {
                    setSalaryChart(ageRangeSelector.value);
                }

                ageRangeSelector.addEventListener('change', updateAgeRange, false);
            });
        </script>

    </div>

    <div class="container">
        <p>This is the end</p>
    </div>

    <footer class="footer">
        <!--#include virtual="../footer.shtml" -->
    </footer>

</body>

</html>